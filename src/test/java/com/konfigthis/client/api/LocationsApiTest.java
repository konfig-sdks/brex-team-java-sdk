/*
 * Team API
 *  The team API lets you manage users, departments, locations, and cards. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateLocationRequest;
import com.konfigthis.client.model.LocationResponse;
import com.konfigthis.client.model.PageLocationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationsApi
 */
@Disabled
public class LocationsApiTest {

    private static LocationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LocationsApi(apiClient);
    }

    /**
     *  Create location 
     *
     *  This endpoint creates a new location. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewLocationTest() throws ApiException {
        String name = null;
        String description = null;
        String idempotencyKey = null;
        LocationResponse response = api.addNewLocation(name)
                .description(description)
                .idempotencyKey(idempotencyKey)
                .execute();
        // TODO: test validations
    }

    /**
     *  List locations 
     *
     *  This endpoint lists all locations. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllLocationsTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        String name = null;
        PageLocationResponse response = api.getAllLocations()
                .cursor(cursor)
                .limit(limit)
                .name(name)
                .execute();
        // TODO: test validations
    }

    /**
     *  Get location 
     *
     *  This endpoint gets a location by ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationByIdTest() throws ApiException {
        String id = null;
        LocationResponse response = api.getLocationById(id)
                .execute();
        // TODO: test validations
    }

}
